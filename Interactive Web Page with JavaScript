<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Interactive Web Page</title>
    <style>
        /* Base styles */
        * {
            box-sizing: border-box;
            margin: 0;
            padding: 0;
            font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
        }
        
        body {
            background-color: #f5f7fa;
            color: #333;
            line-height: 1.6;
            transition: background-color 0.3s, color 0.3s;
        }
        
        body.dark-mode {
            background-color: #1a1a2e;
            color: #f5f7fa;
        }
        
        .container {
            max-width: 1200px;
            margin: 0 auto;
            padding: 20px;
        }
        
        header {
            text-align: center;
            margin-bottom: 30px;
            padding: 20px;
            background: linear-gradient(135deg, #6e8efb, #a777e3);
            color: white;
            border-radius: 10px;
            box-shadow: 0 4px 15px rgba(0, 0, 0, 0.1);
        }
        
        h1, h2, h3 {
            margin-bottom: 15px;
        }
        
        section {
            background: white;
            border-radius: 10px;
            padding: 25px;
            margin-bottom: 30px;
            box-shadow: 0 4px 15px rgba(0, 0, 0, 0.1);
        }
        
        body.dark-mode section {
            background: #16213e;
        }
        
        /* Interactive elements section */
        .interactive-controls {
            display: flex;
            flex-wrap: wrap;
            gap: 20px;
            margin-bottom: 20px;
        }
        
        .interactive-element {
            flex: 1;
            min-width: 300px;
            padding: 20px;
            border-radius: 8px;
            background: #f8f9fa;
        }
        
        body.dark-mode .interactive-element {
            background: #0f3460;
        }
        
        button {
            padding: 10px 20px;
            background: #6e8efb;
            color: white;
            border: none;
            border-radius: 5px;
            cursor: pointer;
            margin: 5px;
            transition: background 0.3s, transform 0.2s;
        }
        
        button:hover {
            background: #5a7df9;
            transform: translateY(-2px);
        }
        
        /* Counter game */
        .counter-display {
            font-size: 2rem;
            text-align: center;
            margin: 15px 0;
            padding: 10px;
            background: #e9ecef;
            border-radius: 5px;
        }
        
        body.dark-mode .counter-display {
            background: #0f3460;
        }
        
        /* FAQ section */
        .faq-item {
            margin-bottom: 10px;
            border: 1px solid #dee2e6;
            border-radius: 5px;
            overflow: hidden;
        }
        
        .faq-question {
            padding: 15px;
            background: #6e8efb;
            color: white;
            cursor: pointer;
            display: flex;
            justify-content: space-between;
            align-items: center;
        }
        
        .faq-answer {
            padding: 0 15px;
            max-height: 0;
            overflow: hidden;
            transition: max-height 0.3s ease, padding 0.3s ease;
            background: #f8f9fa;
        }
        
        body.dark-mode .faq-answer {
            background: #0f3460;
        }
        
        .faq-answer.show {
            max-height: 200px;
            padding: 15px;
        }
        
        /* Form validation */
        .form-group {
            margin-bottom: 20px;
        }
        
        label {
            display: block;
            margin-bottom: 5px;
            font-weight: 500;
        }
        
        input {
            width: 100%;
            padding: 12px;
            border: 1px solid #ced4da;
            border-radius: 5px;
            font-size: 1rem;
        }
        
        body.dark-mode input {
            background: #1a1a2e;
            color: #f5f7fa;
            border-color: #0f3460;
        }
        
        .error {
            color: #dc3545;
            font-size: 0.875rem;
            margin-top: 5px;
            display: none;
        }
        
        .success-message {
            background: #d4edda;
            color: #155724;
            padding: 15px;
            border-radius: 5px;
            margin-top: 20px;
            display: none;
        }
        
        body.dark-mode .success-message {
            background: #155724;
            color: #d4edda;
        }
        
        /* Theme toggle */
        .theme-toggle {
            position: fixed;
            top: 20px;
            right: 20px;
            z-index: 100;
        }
        
        /* Responsive design */
        @media (max-width: 768px) {
            .interactive-controls {
                flex-direction: column;
            }
        }
    </style>
</head>
<body>
    <div class="container">
        <header>
            <h1>Interactive Web Page with JavaScript</h1>
            <p>Explore these interactive features built with JavaScript</p>
        </header>
        
        <!-- Theme toggle button -->
        <div class="theme-toggle">
            <button id="theme-toggle-btn">🌙 Dark Mode</button>
        </div>
        
        <!-- Part 1: Event Handling Examples -->
        <section id="event-handling">
            <h2>JavaScript Event Handling</h2>
            <p>Try these examples of event handling in JavaScript:</p>
            
            <div class="interactive-controls">
                <div class="interactive-element">
                    <h3>Click Event</h3>
                    <button id="click-btn">Click Me!</button>
                    <p id="click-output">Button not clicked yet</p>
                </div>
                
                <div class="interactive-element">
                    <h3>Mouse Events</h3>
                    <div id="mouse-box" style="height: 100px; background: #6e8efb; border-radius: 5px; display: flex; align-items: center; justify-content: center; color: white;">
                        Hover over me
                    </div>
                    <p id="mouse-output">Mouse events will appear here</p>
                </div>
                
                <div class="interactive-element">
                    <h3>Keyboard Events</h3>
                    <input type="text" id="keyboard-input" placeholder="Type something here">
                    <p id="keyboard-output">Keyboard events will appear here</p>
                </div>
            </div>
        </section>
        
        <!-- Part 2: Interactive Elements -->
        <section id="interactive-elements">
            <h2>Interactive Elements</h2>
            
            <div class="interactive-controls">
                <!-- Counter game -->
                <div class="interactive-element">
                    <h3>Counter Game</h3>
                    <div class="counter-display" id="counter-value">0</div>
                    <button id="increment-btn">Increment</button>
                    <button id="decrement-btn">Decrement</button>
                    <button id="reset-counter-btn">Reset</button>
                </div>
                
                <!-- FAQ section -->
                <div class="interactive-element">
                    <h3>FAQ Section</h3>
                    <div class="faq">
                        <div class="faq-item">
                            <div class="faq-question">What is JavaScript? <span>+</span></div>
                            <div class="faq-answer">JavaScript is a programming language that enables interactive web pages. It is an essential part of web applications.</div>
                        </div>
                        <div class="faq-item">
                            <div class="faq-question">What are JavaScript events? <span>+</span></div>
                            <div class="faq-answer">Events are actions that happen in the browser, such as clicks, mouse movements, keyboard input, etc. JavaScript can detect these events and respond to them.</div>
                        </div>
                        <div class="faq-item">
                            <div class="faq-question">What is DOM manipulation? <span>+</span></div>
                            <div class="faq-answer">DOM manipulation is using JavaScript to modify the content, structure, or style of a web page dynamically.</div>
                        </div>
                    </div>
                </div>
            </div>
        </section>
        
        <!-- Part 3: Form Validation -->
        <section id="form-validation">
            <h2>Form Validation</h2>
            <p>Please fill out this form with your information:</p>
            
            <form id="user-form">
                <div class="form-group">
                    <label for="name">Full Name</label>
                    <input type="text" id="name" placeholder="Enter your full name">
                    <div class="error" id="name-error">Please enter a valid name (at least 3 characters)</div>
                </div>
                
                <div class="form-group">
                    <label for="email">Email Address</label>
                    <input type="email" id="email" placeholder="Enter your email">
                    <div class="error" id="email-error">Please enter a valid email address</div>
                </div>
                
                <div class="form-group">
                    <label for="password">Password</label>
                    <input type="password" id="password" placeholder="Create a password">
                    <div class="error" id="password-error">Password must be at least 8 characters and include a number</div>
                </div>
                
                <button type="submit">Submit Form</button>
            </form>
            
            <div class="success-message" id="success-message">
                Form submitted successfully! Thank you.
            </div>
        </section>
    </div>

    <script>
        // ===== PART 1: EVENT HANDLING =====
        
        // Click event example
        document.getElementById('click-btn').addEventListener('click', function() {
            document.getElementById('click-output').textContent = 'Button clicked! ' + new Date().toLocaleTimeString();
        });
        
        // Mouse events example
        const mouseBox = document.getElementById('mouse-box');
        const mouseOutput = document.getElementById('mouse-output');
        
        mouseBox.addEventListener('mouseover', function() {
            mouseOutput.textContent = 'Mouse is over the box';
            this.style.backgroundColor = '#a777e3';
        });
        
        mouseBox.addEventListener('mouseout', function() {
            mouseOutput.textContent = 'Mouse left the box';
            this.style.backgroundColor = '#6e8efb';
        });
        
        // Keyboard events example
        const keyboardInput = document.getElementById('keyboard-input');
        const keyboardOutput = document.getElementById('keyboard-output');
        
        keyboardInput.addEventListener('keydown', function(event) {
            keyboardOutput.textContent = `Key pressed: ${event.key} (keydown)`;
        });
        
        keyboardInput.addEventListener('keyup', function() {
            keyboardOutput.textContent = `Typing: ${this.value}`;
        });
        
        
        // ===== PART 2: INTERACTIVE ELEMENTS =====
        
        // Dark/Light mode toggle
        const themeToggleBtn = document.getElementById('theme-toggle-btn');
        
        themeToggleBtn.addEventListener('click', function() {
            document.body.classList.toggle('dark-mode');
            
            if (document.body.classList.contains('dark-mode')) {
                this.textContent = '☀️ Light Mode';
            } else {
                this.textContent = '🌙 Dark Mode';
            }
        });
        
        // Counter game
        let count = 0;
        const counterDisplay = document.getElementById('counter-value');
        const incrementBtn = document.getElementById('increment-btn');
        const decrementBtn = document.getElementById('decrement-btn');
        const resetCounterBtn = document.getElementById('reset-counter-btn');
        
        function updateCounter() {
            counterDisplay.textContent = count;
            
            // Change color based on count
            if (count > 0) {
                counterDisplay.style.color = '#28a745';
            } else if (count < 0) {
                counterDisplay.style.color = '#dc3545';
            } else {
                counterDisplay.style.color = '';
            }
        }
        
        incrementBtn.addEventListener('click', function() {
            count++;
            updateCounter();
        });
        
        decrementBtn.addEventListener('click', function() {
            count--;
            updateCounter();
        });
        
        resetCounterBtn.addEventListener('click', function() {
            count = 0;
            updateCounter();
        });
        
        // FAQ section
        const faqQuestions = document.querySelectorAll('.faq-question');
        
        faqQuestions.forEach(question => {
            question.addEventListener('click', function() {
                const answer = this.nextElementSibling;
                const isOpen = answer.classList.contains('show');
                
                // Close all answers
                document.querySelectorAll('.faq-answer').forEach(item => {
                    item.classList.remove('show');
                });
                
                // Update all icons to plus
                document.querySelectorAll('.faq-question span').forEach(item => {
                    item.textContent = '+';
                });
                
                // If answer wasn't open, open it
                if (!isOpen) {
                    answer.classList.add('show');
                    this.querySelector('span').textContent = '-';
                }
            });
        });
        
        
        // ===== PART 3: FORM VALIDATION =====
        
        const userForm = document.getElementById('user-form');
        const nameInput = document.getElementById('name');
        const emailInput = document.getElementById('email');
        const passwordInput = document.getElementById('password');
        const nameError = document.getElementById('name-error');
        const emailError = document.getElementById('email-error');
        const passwordError = document.getElementById('password-error');
        const successMessage = document.getElementById('success-message');
        
        // Validate name field
        nameInput.addEventListener('blur', function() {
            if (this.value.length < 3) {
                nameError.style.display = 'block';
                this.style.borderColor = '#dc3545';
            } else {
                nameError.style.display = 'none';
                this.style.borderColor = '#28a745';
            }
        });
        
        // Validate email field
        emailInput.addEventListener('blur', function() {
            const emailPattern = /^[^\s@]+@[^\s@]+\.[^\s@]+$/;
            
            if (!emailPattern.test(this.value)) {
                emailError.style.display = 'block';
                this.style.borderColor = '#dc3545';
            } else {
                emailError.style.display = 'none';
                this.style.borderColor = '#28a745';
            }
        });
        
        // Validate password field
        passwordInput.addEventListener('blur', function() {
            const hasMinimumLength = this.value.length >= 8;
            const hasNumber = /\d/.test(this.value);
            
            if (!hasMinimumLength || !hasNumber) {
                passwordError.style.display = 'block';
                this.style.borderColor = '#dc3545';
            } else {
                passwordError.style.display = 'none';
                this.style.borderColor = '#28a745';
            }
        });
        
        // Form submission
        userForm.addEventListener('submit', function(event) {
            event.preventDefault();
            
            // Validate all fields
            let isValid = true;
            
            if (nameInput.value.length < 3) {
                nameError.style.display = 'block';
                nameInput.style.borderColor = '#dc3545';
                isValid = false;
            }
            
            const emailPattern = /^[^\s@]+@[^\s@]+\.[^\s@]+$/;
            if (!emailPattern.test(emailInput.value)) {
                emailError.style.display = 'block';
                emailInput.style.borderColor = '#dc3545';
                isValid = false;
            }
            
            const hasMinimumLength = passwordInput.value.length >= 8;
            const hasNumber = /\d/.test(passwordInput.value);
            if (!hasMinimumLength || !hasNumber) {
                passwordError.style.display = 'block';
                passwordInput.style.borderColor = '#dc3545';
                isValid = false;
            }
            
            // If form is valid, show success message
            if (isValid) {
                successMessage.style.display = 'block';
                userForm.reset();
                
                // Reset border colors
                nameInput.style.borderColor = '';
                emailInput.style.borderColor = '';
                passwordInput.style.borderColor = '';
                
                // Hide success message after 5 seconds
                setTimeout(() => {
                    successMessage.style.display = 'none';
                }, 5000);
            }
        });
    </script>
</body>
</html>
